public class Solution {
    public int numIslands(char[][] grid) {
        int m = grid.length;
        int n = 0;
        if (m != 0) {
            n = grid[0].length;
        }
        int result = 0;
        if (m <= 0 || n <= 0 || grid == null) {
            return result;
        }
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (grid[i][j] == '1') {
                    helper(grid, i, j, m, n, result);
                    result ++;
                }
            }
        }
        return result;
    }
    public void helper(char[][] grid, int i, int j, int m, int n, int result) {
        if (i < 0 || j < 0 || i >= m || j >= n || grid[i][j] != '1') {
            return;
        }
        grid[i][j] = '0';
        helper(grid, i + 1, j, m, n, result);
        helper(grid, i - 1, j, m, n, result);
        helper(grid, i, j + 1, m, n, result);
        helper(grid, i, j - 1, m ,n ,result);
    }
}
