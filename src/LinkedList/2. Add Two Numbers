/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        if(l1 == null) return l2;
        if(l2 == null) return l1;
        
        int a = 0;
        a = (l1.val + l2.val) / 10;
        ListNode result = new ListNode((l1.val + l2.val) % 10);
        l1 = l1.next;
        l2 = l2.next;
        ListNode cur = result;
        while(l1 != null && l2 != null) {
            int temp = l1.val + l2.val + a;
            a = temp / 10;
            cur.next = new ListNode(temp % 10);
            cur = cur.next;
            l1 = l1.next;
            l2 = l2.next;
        }
        while(l1 != null) {
            int temp = l1.val + a;
            a = temp / 10;
            cur.next = new ListNode(temp % 10);
            cur = cur.next;
            l1 = l1.next;
        }
        
        while(l2 != null) {
            int temp = l2.val + a;
            a = temp / 10;
            cur.next = new ListNode(temp % 10);
            cur = cur.next;
            l2 = l2.next;
        }
       if(a != 0) {
           cur.next = new ListNode(1);
           cur = cur.next;
       }
       cur.next = null;
       return result;
    }
}
