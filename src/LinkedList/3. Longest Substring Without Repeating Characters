public class Solution {
    public int lengthOfLongestSubstringï¼’(String s) {
        HashMap<Character, Integer> pair = new HashMap<>();
        int left = 0;
        int right = 0;
        int max = 0;
        int size = s.length();
        for(;right < size;right++) {
            Character cur = s.charAt(right);
            Integer pos = pair.get(cur);
            pair.put(cur,right);
           if(pos != null && (pos >= left && pos < right)) {
                max = max > (right - left)? max : right - left;
                left = pos + 1;
            }
        }
        return max > right - left ? max : right - left;
        //return max;
    }
    
    public int lengthOfLongestSubstring(String s) {
        if (s.length()==0) return 0;
        HashMap<Character, Integer> map = new HashMap<Character, Integer>();
        int max=0;
        for (int i=0, j=0; i<s.length(); ++i){
            if (map.containsKey(s.charAt(i))){
                j = Math.max(j,map.get(s.charAt(i))+1);
            }
            map.put(s.charAt(i),i);
            max = Math.max(max,i-j+1);
        }
        return max;
    }
}
